CodeWhisperer 1 RecArea 

Test: QA 
test_both_rectangles_as_points (RecArea_test.TestComputeArea) ... ok
test_complete_overlap (RecArea_test.TestComputeArea) ... ok
test_extremely_small_overlap (RecArea_test.TestComputeArea) ... FAIL
test_large_coordinates (RecArea_test.TestComputeArea) ... ok
test_large_negative_coordinates (RecArea_test.TestComputeArea) ... FAIL
test_large_rectangle_with_small_overlap (RecArea_test.TestComputeArea) ... FAIL
test_no_overlap (RecArea_test.TestComputeArea) ... FAIL
test_no_overlap_large_coordinates (RecArea_test.TestComputeArea) ... ok
test_one_line_rectangle (RecArea_test.TestComputeArea) ... FAIL
test_overlap (RecArea_test.TestComputeArea) ... ok
test_overlap_with_negative_and_positive_quadrants (RecArea_test.TestComputeArea) ... ok
test_overlapping_edges_exactly (RecArea_test.TestComputeArea) ... ok
test_overlapping_lines (RecArea_test.TestComputeArea) ... ok
test_rectangles_touching_sides_not_overlapping (RecArea_test.TestComputeArea) ... ok
test_rectangles_with_zero_height (RecArea_test.TestComputeArea) ... ok
test_rectangles_with_zero_width (RecArea_test.TestComputeArea) ... ok
test_small_rectangle_fully_inside_large_rectangle (RecArea_test.TestComputeArea) ... ok
test_touching_rectangles (RecArea_test.TestComputeArea) ... FAIL

Failed Test Cases Summary:
- test_extremely_small_overlap: Failed
- test_large_negative_coordinates: Failed
- test_large_rectangle_with_small_overlap: Failed
- test_no_overlap: Failed
- test_one_line_rectangle: Failed
- test_touching_rectangles: Failed
----------------------------------------------------------------------
Ran 18 tests in 0.006s

FAILED (failures=6)

Summary:
Total tests run: 18
Passed tests: 12
Failed tests: 6
Pass percentage: 66.67%

Test: Time 
Average running time over 100 runs: 0.00246257 seconds

Test: Memory 
Average memory usage over 100 runs: 37.53 MiB

Test: Maintainability 
=======================================
Analyzing maintainability of RecArea.py
=======================================

=====================================
Cyclomatic Complexity (CC)
-------------------------------------
RecArea.py
    F 1:0 compute_area - A

1 blocks (classes, functions, methods) analyzed.
Average complexity: A (3.0)
=====================================

=====================================
Halstead Metrics
-------------------------------------
RecArea.py:
    h1: 5
    h2: 25
    N1: 14
    N2: 28
    vocabulary: 30
    length: 42
    calculated_length: 127.70604521880493
    volume: 206.0894050155578
    difficulty: 2.8
    effort: 577.0503340435617
    time: 32.05835189130899
    bugs: 0.06869646833851926
=====================================

=====================================
Raw Metrics
-------------------------------------
RecArea.py
    LOC: 10
    LLOC: 7
    SLOC: 7
    Comments: 0
    Single comments: 0
    Multi: 0
    Blank: 3
    - Comment Stats
        (C % L): 0%
        (C % S): 0%
        (C + M % L): 0%
=====================================

=====================================
Maintainability Index (MI)
-------------------------------------
RecArea.py - A (64.96)
=====================================

Test: Style 
************* Module RecArea
RecArea.py:1:0: C0114: Missing module docstring (missing-module-docstring)
RecArea.py:1:0: C0103: Module name "RecArea" doesn't conform to snake_case naming style (invalid-name)
RecArea.py:1:0: C0116: Missing function or method docstring (missing-function-docstring)
RecArea.py:1:0: R0913: Too many arguments (8/5) (too-many-arguments)

------------------------------------------------------------------
Your code has been rated at 4.29/10 (previous run: 5.00/10, -0.71)

